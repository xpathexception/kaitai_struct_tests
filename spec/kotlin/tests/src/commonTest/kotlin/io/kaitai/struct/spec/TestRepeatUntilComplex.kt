// Autogenerated from KST: please remove this line if doing any edits by hand!

package io.kaitai.struct.spec

import io.kaitai.struct.typing.*
import io.kaitai.struct.testformats.RepeatUntilComplex
import kotlin.test.*
import okio.FileSystem
import okio.Path.Companion.toPath
import okio.SYSTEM

class TestRepeatUntilComplex {
    val SRC_DIR = FileSystem.SYSTEM.canonicalize("../../../src/".toPath(true))

    @Test
    fun testRepeatUntilComplex() {
        val path = SRC_DIR.resolve("repeat_until_complex.bin").toString()
        val r: RepeatUntilComplex = RepeatUntilComplex.fromFile(path)

        assertEquals(actual = r.first().size, expected = 3)
        assertEquals(actual = r.first()[0].count(), expected = 4)
        assertContentEquals(actual = r.first()[0].values(), expected = arrayListOf(0 + 1, 2, 3, 4))
        assertEquals(actual = r.first()[1].count(), expected = 2)
        assertContentEquals(actual = r.first()[1].values(), expected = arrayListOf(0 + 1, 2))
        assertEquals(actual = r.first()[2].count(), expected = 0)
        assertEquals(actual = r.second().size, expected = 4)
        assertEquals(actual = r.second()[0].count(), expected = 6)
        assertContentEquals(actual = r.second()[0].values(), expected = arrayListOf(0 + 1, 2, 3, 4, 5, 6))
        assertEquals(actual = r.second()[1].count(), expected = 3)
        assertContentEquals(actual = r.second()[1].values(), expected = arrayListOf(0 + 1, 2, 3))
        assertEquals(actual = r.second()[2].count(), expected = 4)
        assertContentEquals(actual = r.second()[2].values(), expected = arrayListOf(0 + 1, 2, 3, 4))
        assertEquals(actual = r.second()[3].count(), expected = 0)
        assertContentEquals(actual = r.third(), expected = arrayListOf(0 + 102, 111, 111, 98, 97, 114, 0))
    }
}
