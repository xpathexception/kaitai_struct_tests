// Autogenerated from KST: please remove this line if doing any edits by hand!

package io.kaitai.struct.spec

import io.kaitai.struct.typing.*
import io.kaitai.struct.testformats.IntegersDoubleOverflow
import kotlin.test.*
import okio.FileSystem
import okio.Path.Companion.toPath
import okio.SYSTEM

class TestIntegersDoubleOverflow {
    val SRC_DIR = FileSystem.SYSTEM.canonicalize("../../../src/".toPath(true))

    @Test
    fun testIntegersDoubleOverflow() {
        val path = SRC_DIR.resolve("integers_double_overflow.bin").toString()
        val r: IntegersDoubleOverflow = IntegersDoubleOverflow.fromFile(path)

        assertEquals(actual = r.signedSafeMinBe(), expected = -9007199254740991)
        assertEquals(actual = r.signedSafeMinLe(), expected = -9007199254740991)
        assertEquals(actual = r.signedSafeMaxBe(), expected = 9007199254740991)
        assertEquals(actual = r.signedSafeMaxLe(), expected = 9007199254740991)
        assertEquals(actual = r.signedUnsafeNegBe().toString(), expected = "-9007199254740993")
        assertEquals(actual = r.signedUnsafeNegLe().toString(), expected = "-9007199254740993")
        assertEquals(actual = r.signedUnsafePosBe().toString(), expected = "9007199254740993")
        assertEquals(actual = r.signedUnsafePosBe().toString(), expected = "9007199254740993")
    }
}
