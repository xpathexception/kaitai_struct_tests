// Autogenerated from KST: please remove this line if doing any edits by hand!

package io.kaitai.struct.spec

import io.kaitai.struct.typing.*
import io.kaitai.struct.testformats.SwitchManualIntSizeElse
import kotlin.test.*
import okio.FileSystem
import okio.Path.Companion.toPath
import okio.SYSTEM

class TestSwitchManualIntSizeElse {
    val SRC_DIR = FileSystem.SYSTEM.canonicalize("../../../src/".toPath(true))

    @Test
    fun testSwitchManualIntSizeElse() {
        val path = SRC_DIR.resolve("switch_tlv.bin").toString()
        val r: SwitchManualIntSizeElse = SwitchManualIntSizeElse.fromFile(path)

        assertEquals(actual = r.chunks().size, expected = 4)
        assertEquals(actual = r.chunks()[0].code(), expected = 17)
        assertEquals(actual = (r.chunks()[0].body() as SwitchManualIntSizeElse.Chunk.ChunkMeta) /* generic cast */.title(), expected = "Stuff")
        assertEquals(actual = (r.chunks()[0].body() as SwitchManualIntSizeElse.Chunk.ChunkMeta) /* generic cast */.author(), expected = "Me")
        assertEquals(actual = r.chunks()[1].code(), expected = 34)
        assertContentEquals(actual = (r.chunks()[1].body() as SwitchManualIntSizeElse.Chunk.ChunkDir) /* generic cast */.entries(), expected = arrayListOf("AAAA", "BBBB", "CCCC"))
        assertEquals(actual = r.chunks()[2].code(), expected = 51)
        assertEquals(actual = (r.chunks()[2].body() as SwitchManualIntSizeElse.Chunk.Dummy) /* generic cast */.rest(), expected = byteArrayOf(16, 32, 48, 64, 80, 96, 112, -128))
        assertEquals(actual = r.chunks()[3].code(), expected = 255)
        assertEquals(actual = (r.chunks()[3].body() as SwitchManualIntSizeElse.Chunk.Dummy) /* generic cast */.rest(), expected = byteArrayOf())
    }
}
